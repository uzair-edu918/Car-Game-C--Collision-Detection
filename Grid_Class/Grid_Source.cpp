#include <iostream>
#include "Grid.h"


using namespace std;

Grid::Grid() {

     grid = {
       
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},
        {" " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ", " " ," " , " " ," " , " ",},





      };
    
    this->refresh();
}


void Grid::refresh(){

    system("cls");

    for (int y = 0; y < grid.size(); y++) {
        cout << endl; // Move to the next row after printing each row

        for (int x = 0; x < grid[0].size(); x++) {
            cout << grid[y][x];
        }
    }


}

